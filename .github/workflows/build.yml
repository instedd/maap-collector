name: Build

on:
  - push

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '10.15.3'
      - name: Install dependencies
        run: yarn install --ignore-engines  --network-timeout 1000000
      - name: Post-install
        run: yarn postinstall
      - name: Lint
        run: yarn lint
      - name: Flow
        run: yarn flow
      - name: Build End-to-End Tests
        run: yarn build-e2e
      - name: Run End-to-End Tests
        run: xvfb-run --server-args="-screen 0 1280x720x24" yarn test-e2e
  build:
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        os:
          - windows-2019
          - macos-10.15
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '10.15.3'
      - name: Install dependencies
        run: yarn install --ignore-engines  --network-timeout 1000000
      - name: Post-install
        run: yarn postinstall
      - name: Build
        run: yarn build
  create-releases:
    runs-on: ubuntu-20.04
    needs: build
    outputs:
      instances: ${{ steps.print-instances.outputs.instances }}
    env:
      # INSTANCES must be a JSON array of instance codes
      INSTANCES: '["demo","staging"]' # "bf","cm","ga","gh","ke","mw","ng","sl","sn","sz","tz","ug","zm","zw"
    steps:
      # - uses: actions/checkout@v2
      # - uses: actions/setup-node@v2
      #   with:
      #     node-version: '10.15.3'
      # - name: Install dependencies
      #   run: yarn install --ignore-engines  --network-timeout 1000000
      # - name: Post-install
      #   run: yarn postinstall
      - id: print-instances
        run: echo "::set-output name=instances::$INSTANCES"
  run-release:
    runs-on: ${{ matrix.os }}
    needs: create-releases
    strategy:
      matrix:
        os:
          - windows-2019
          - macos-10.15
        instance: ${{fromJson(needs.create-releases.outputs.instances)}}
    steps:
      - name: Print to check
        run: echo "This job runs with $OS_NAME and $INSTANCE"
        env:
          OS_NAME: ${{ matrix.os }}
          INSTANCE: ${{ matrix.instance }}

  release:
    runs-on: ${{ matrix.os }}
    needs: create-releases
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/feature/github-actions'
    strategy:
      matrix:
        os:
          - windows-2019
          - macos-10.15
        instance: ${{fromJson(needs.create-releases.outputs.instances)}}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '10.15.3'
      - name: Install dependencies
        run: yarn install --ignore-engines  --network-timeout 1000000
      - name: Post-install
        run: yarn postinstall
      - name: Release
        run: node release.js
        env:
          INSTANCE: ${{ matrix.instance }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
